/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Model.User;
import javax.swing.JOptionPane;
import Controller.ManageAgentController;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author sunet
 */
public class AMAgent extends javax.swing.JFrame {
    /**
     * Creates new form AMDoctor
     */
    private final ManageAgentController controller;
    public AMAgent() {
        controller = new ManageAgentController();
        this.setResizable(false);
        initComponents();
        refreshTable();

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btn_search = new necesario.MaterialButton();
        btn_save = new necesario.MaterialButton();
        txt_addConfirmPass = new rojerusan.RSPasswordTextPlaceHolder();
        txt_addPass = new rojerusan.RSPasswordTextPlaceHolder();
        txt_searchAgent = new app.bolivia.swing.JCTextField();
        btn_delete = new necesario.MaterialButton();
        btn_clearAll = new necesario.MaterialButton();
        btn_update = new necesario.MaterialButton();
        btn_add = new necesario.MaterialButton();
        txt_updateUsername = new app.bolivia.swing.JCTextField();
        txt_addFname = new app.bolivia.swing.JCTextField();
        txt_addLname = new app.bolivia.swing.JCTextField();
        txt_addContactNo = new app.bolivia.swing.JCTextField();
        txt_addUsername = new app.bolivia.swing.JCTextField();
        txt_updateFname = new app.bolivia.swing.JCTextField();
        txt_updateLname = new app.bolivia.swing.JCTextField();
        txt_updateContactNo = new app.bolivia.swing.JCTextField();
        btn_backDashboard = new necesario.RSMaterialButtonCircle();
        list_doctorDetails = new javax.swing.JScrollPane();
        table_agentList = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_search.setBackground(new java.awt.Color(217, 217, 217));
        btn_search.setForeground(new java.awt.Color(153, 153, 153));
        btn_search.setText("Search");
        btn_search.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });
        jPanel2.add(btn_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 258, 60, 30));

        btn_save.setBackground(new java.awt.Color(0, 153, 0));
        btn_save.setForeground(new java.awt.Color(255, 255, 255));
        btn_save.setText("save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        jPanel2.add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 560, 110, 40));

        txt_addConfirmPass.setBackground(new java.awt.Color(217, 217, 217));
        txt_addConfirmPass.setBorder(null);
        txt_addConfirmPass.setForeground(new java.awt.Color(0, 0, 0));
        txt_addConfirmPass.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txt_addConfirmPass.setPhColor(new java.awt.Color(0, 0, 0));
        txt_addConfirmPass.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        txt_addConfirmPass.setSelectionColor(new java.awt.Color(204, 51, 0));
        txt_addConfirmPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addConfirmPassActionPerformed(evt);
            }
        });
        jPanel2.add(txt_addConfirmPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 544, 140, 32));

        txt_addPass.setBackground(new java.awt.Color(217, 217, 217));
        txt_addPass.setBorder(null);
        txt_addPass.setForeground(new java.awt.Color(0, 0, 0));
        txt_addPass.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txt_addPass.setPhColor(new java.awt.Color(0, 0, 0));
        txt_addPass.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        txt_addPass.setSelectionColor(new java.awt.Color(204, 51, 0));
        txt_addPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addPassActionPerformed(evt);
            }
        });
        jPanel2.add(txt_addPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 496, 190, 32));

        txt_searchAgent.setBackground(new java.awt.Color(217, 217, 217));
        txt_searchAgent.setBorder(null);
        txt_searchAgent.setForeground(new java.awt.Color(0, 0, 0));
        txt_searchAgent.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_searchAgent.setMargin(new java.awt.Insets(0, 0, 0, 0));
        txt_searchAgent.setPlaceholder("Search by Agent Id");
        txt_searchAgent.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_searchAgent.setSelectionColor(new java.awt.Color(255, 0, 0));
        txt_searchAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchAgentActionPerformed(evt);
            }
        });
        jPanel2.add(txt_searchAgent, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 255, 190, 36));
        txt_searchAgent.getAccessibleContext().setAccessibleName("");

        btn_delete.setBackground(new java.awt.Color(255, 0, 51));
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        jPanel2.add(btn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 620, 110, 40));

        btn_clearAll.setBackground(new java.awt.Color(255, 0, 51));
        btn_clearAll.setForeground(new java.awt.Color(255, 255, 255));
        btn_clearAll.setText("Clear all");
        btn_clearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearAllActionPerformed(evt);
            }
        });
        jPanel2.add(btn_clearAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 610, 110, 40));

        btn_update.setBackground(new java.awt.Color(0, 51, 255));
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        jPanel2.add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 560, 110, 40));

        btn_add.setBackground(new java.awt.Color(0, 51, 255));
        btn_add.setForeground(new java.awt.Color(255, 255, 255));
        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        jPanel2.add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 610, 110, 40));

        txt_updateUsername.setEditable(false);
        txt_updateUsername.setBackground(new java.awt.Color(217, 217, 217));
        txt_updateUsername.setBorder(null);
        txt_updateUsername.setForeground(new java.awt.Color(0, 0, 0));
        txt_updateUsername.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        txt_updateUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_updateUsername.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_updateUsername.setSelectionColor(new java.awt.Color(255, 0, 51));
        jPanel2.add(txt_updateUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 500, 150, 30));

        txt_addFname.setBackground(new java.awt.Color(217, 217, 217));
        txt_addFname.setBorder(null);
        txt_addFname.setForeground(new java.awt.Color(51, 51, 51));
        txt_addFname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_addFname.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_addFname.setSelectionColor(new java.awt.Color(255, 0, 0));
        jPanel2.add(txt_addFname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 285, 180, -1));

        txt_addLname.setBackground(new java.awt.Color(217, 217, 217));
        txt_addLname.setBorder(null);
        txt_addLname.setForeground(new java.awt.Color(51, 51, 51));
        txt_addLname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_addLname.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_addLname.setSelectionColor(new java.awt.Color(255, 0, 0));
        jPanel2.add(txt_addLname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 337, 180, -1));

        txt_addContactNo.setBackground(new java.awt.Color(217, 217, 217));
        txt_addContactNo.setBorder(null);
        txt_addContactNo.setForeground(new java.awt.Color(51, 51, 51));
        txt_addContactNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_addContactNo.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_addContactNo.setSelectionColor(new java.awt.Color(255, 0, 0));
        jPanel2.add(txt_addContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 390, 170, -1));

        txt_addUsername.setBackground(new java.awt.Color(217, 217, 217));
        txt_addUsername.setBorder(null);
        txt_addUsername.setForeground(new java.awt.Color(51, 51, 51));
        txt_addUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_addUsername.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_addUsername.setSelectionColor(new java.awt.Color(255, 0, 0));
        txt_addUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addUsernameActionPerformed(evt);
            }
        });
        jPanel2.add(txt_addUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 442, 180, -1));

        txt_updateFname.setEditable(false);
        txt_updateFname.setBackground(new java.awt.Color(217, 217, 217));
        txt_updateFname.setBorder(null);
        txt_updateFname.setForeground(new java.awt.Color(0, 0, 0));
        txt_updateFname.setCaretColor(new java.awt.Color(217, 217, 217));
        txt_updateFname.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        txt_updateFname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_updateFname.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_updateFname.setSelectionColor(new java.awt.Color(255, 0, 51));
        jPanel2.add(txt_updateFname, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 330, 150, 30));

        txt_updateLname.setEditable(false);
        txt_updateLname.setBackground(new java.awt.Color(217, 217, 217));
        txt_updateLname.setBorder(null);
        txt_updateLname.setForeground(new java.awt.Color(0, 0, 0));
        txt_updateLname.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        txt_updateLname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_updateLname.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_updateLname.setSelectionColor(new java.awt.Color(255, 0, 51));
        jPanel2.add(txt_updateLname, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 386, 150, 30));

        txt_updateContactNo.setEditable(false);
        txt_updateContactNo.setBackground(new java.awt.Color(217, 217, 217));
        txt_updateContactNo.setBorder(null);
        txt_updateContactNo.setForeground(new java.awt.Color(0, 0, 0));
        txt_updateContactNo.setDisabledTextColor(new java.awt.Color(217, 217, 217));
        txt_updateContactNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_updateContactNo.setSelectedTextColor(new java.awt.Color(255, 204, 204));
        txt_updateContactNo.setSelectionColor(new java.awt.Color(255, 0, 51));
        jPanel2.add(txt_updateContactNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 445, 150, 30));

        btn_backDashboard.setBackground(new java.awt.Color(204, 0, 0));
        btn_backDashboard.setText("<");
        btn_backDashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_backDashboard.setFont(new java.awt.Font("Roboto Medium", 0, 40)); // NOI18N
        btn_backDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backDashboardActionPerformed(evt);
            }
        });
        jPanel2.add(btn_backDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 60, 60));

        list_doctorDetails.setBackground(new java.awt.Color(204, 204, 204));
        list_doctorDetails.setBorder(null);

        table_agentList.setBackground(new java.awt.Color(255, 255, 255));
        table_agentList.setForeground(new java.awt.Color(0, 0, 0));
        table_agentList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "First Name", "Last Name", "Username", "Contact No."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_agentList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table_agentList.setGridColor(new java.awt.Color(255, 0, 0));
        table_agentList.setRowHeight(25);
        table_agentList.setSelectionBackground(new java.awt.Color(255, 0, 0));
        table_agentList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        table_agentList.setShowGrid(false);
        table_agentList.getTableHeader().setResizingAllowed(false);
        table_agentList.getTableHeader().setReorderingAllowed(false);
        table_agentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_agentListMouseClicked(evt);
            }
        });
        list_doctorDetails.setViewportView(table_agentList);

        jPanel2.add(list_doctorDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, 400, 450));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/imgs/3.png"))); // NOI18N
        jPanel2.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 750));

        setSize(new java.awt.Dimension(1296, 758));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_searchActionPerformed
    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        
        String agentId = txt_searchAgent.getText();
        String fname = txt_updateFname.getText();
        String lname = txt_updateLname.getText();
        String contact = txt_updateContactNo.getText();
        String username = txt_updateUsername.getText();
        
        User agent = new User();
        
        agent.setUser_id(agentId);
        agent.setFname(fname);
        agent.setLname(lname);
        agent.setContact(contact);
        agent.setUsername(username);
        
        if(agentId.isEmpty()){
            JOptionPane.showMessageDialog(null, "Agent Id is required.", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            int response = JOptionPane.showConfirmDialog(
                    null, 
                    "Are you sure you want to update the agent's information?", 
                    "Confirm Update", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE
            );

            if (response == JOptionPane.YES_OPTION) {
                if (controller.updateAgent(agent)) {
                    JOptionPane.showMessageDialog(null, "Agent Updated Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid Agent Id.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Agent update canceled.", "Canceled", JOptionPane.INFORMATION_MESSAGE);
            }
        }

        txt_searchAgent.setText("");
        txt_updateFname.setText("");
        txt_updateLname.setText("");
        txt_updateContactNo.setText("");
        txt_updateUsername.setText("");
        txt_updateFname.setEditable(false);
        txt_updateLname.setEditable(false);
        txt_updateContactNo.setEditable(false);
        txt_updateUsername.setEditable(false);      
        refreshTable();
    }//GEN-LAST:event_btn_saveActionPerformed
    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        
        String agentId = txt_searchAgent.getText();
        
        if(agentId.isEmpty()){
            JOptionPane.showMessageDialog(null, "Agent Id is required.", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            int response = JOptionPane.showConfirmDialog(
                null, 
                "Are you sure you want to delete this agent?", 
                "Confirm Deletion", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.WARNING_MESSAGE
                );

            if (response == JOptionPane.YES_OPTION) {
                if (controller.deleteAgent(agentId)) {
                    JOptionPane.showMessageDialog(null, "Agent Deleted Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid Agent Id.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Agent deletion canceled.", "Canceled", JOptionPane.INFORMATION_MESSAGE);
            } 
        }
        
        txt_searchAgent.setText("");
        txt_updateFname.setText("");
        txt_updateLname.setText("");
        txt_updateContactNo.setText("");
        txt_updateUsername.setText("");
        txt_updateFname.setEditable(false);
        txt_updateLname.setEditable(false);
        txt_updateContactNo.setEditable(false);
        txt_updateUsername.setEditable(false); 
        refreshTable();
    }//GEN-LAST:event_btn_deleteActionPerformed


    private void btn_clearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearAllActionPerformed
        txt_addFname.setText("");
        txt_addLname.setText("");
        txt_addContactNo.setText("");
        txt_addUsername.setText("");
        txt_addPass.setText("");
        txt_addConfirmPass.setText("");
    }//GEN-LAST:event_btn_clearAllActionPerformed


    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        if(!txt_updateFname.getText().equals("")){
            txt_updateFname.setEditable(true);
            txt_updateLname.setEditable(true);
            txt_updateContactNo.setEditable(true);
            txt_updateUsername.setEditable(true); 
        }
    }//GEN-LAST:event_btn_updateActionPerformed


    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        String fname = txt_addFname.getText();
        String lname = txt_addLname.getText();
        String contactNo = txt_addContactNo.getText();
        String username = txt_addUsername.getText();
        String password = String.valueOf(txt_addPass.getPassword());
        String confPassword = String.valueOf(txt_addConfirmPass.getPassword());
        
        if(fname.isEmpty() || 
                lname.isEmpty() ||
                contactNo.isEmpty() ||
                username.isEmpty() ||
                password.isEmpty() ||
                confPassword.isEmpty()){
            
                JOptionPane.showMessageDialog(null, "All fields are required. Please fill in the necessary information.", "Error", JOptionPane.ERROR_MESSAGE);
        } else{
            if (!password.equals(confPassword)){
                JOptionPane.showMessageDialog(null, "Passwords do not match. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                txt_addPass.setText("");
                txt_addConfirmPass.setText("");
            } else {
                String hPassword = PasswordHashing.Hash(password);
                User doctor = new User(username, hPassword, "agent", fname, lname, contactNo);
                int response = JOptionPane.showConfirmDialog(
                        null, 
                        "Are you sure you want to add this agent?", 
                        "Confirm Addition", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE
                );

                if (response == JOptionPane.YES_OPTION) {
                    if (controller.addAgent(doctor)) {
                        JOptionPane.showMessageDialog(null, "Agent Added Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "An error occurred while adding the agent.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Agent addition canceled.", "Canceled", JOptionPane.INFORMATION_MESSAGE);
                }
                txt_addFname.setText("");        
                txt_addLname.setText("");
                txt_addContactNo.setText("");
                txt_addUsername.setText("");
                txt_addPass.setText("");
                txt_addConfirmPass.setText("");   
                refreshTable();
            }
        }
    }//GEN-LAST:event_btn_addActionPerformed
    private void txt_addUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addUsernameActionPerformed
    private void txt_addConfirmPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addConfirmPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addConfirmPassActionPerformed
    private void txt_addPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addPassActionPerformed
    private void btn_backDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backDashboardActionPerformed
        ADashboard dashboard = new ADashboard();
        dashboard.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_backDashboardActionPerformed


    private void table_agentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_agentListMouseClicked
        int row = table_agentList.rowAtPoint(evt.getPoint());
        if (row >= 0) {
            String agentId = table_agentList.getValueAt(row, 0).toString();
            String fname = table_agentList.getValueAt(row, 1).toString();
            String lname = table_agentList.getValueAt(row, 2).toString();
            String username = table_agentList.getValueAt(row, 3).toString();
            String contact = table_agentList.getValueAt(row, 4).toString();

            txt_searchAgent.setText(agentId);
            txt_updateFname.setText(fname);
            txt_updateLname.setText(lname);
            txt_updateContactNo.setText(contact);
            txt_updateUsername.setText(username);
        }
    }//GEN-LAST:event_table_agentListMouseClicked


    private void txt_searchAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchAgentActionPerformed
        String agentId = txt_searchAgent.getText();
        
        User agent = controller.searchAgent(agentId);
        
        if(agent != null){
            
            String fname = agent.getFname();
            String lname = agent.getLname();
            String contact = agent.getContact();
            String username = agent.getUsername();
                        
            txt_updateFname.setText(fname);
            txt_updateLname.setText(lname);
            txt_updateContactNo.setText(contact);
            txt_updateUsername.setText(username);
        } else{
            JOptionPane.showMessageDialog(null, "Invalid Doctor Id", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_searchAgentActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AMAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AMAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AMAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AMAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AMAgent().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private necesario.MaterialButton btn_add;
    private necesario.RSMaterialButtonCircle btn_backDashboard;
    private necesario.MaterialButton btn_clearAll;
    private necesario.MaterialButton btn_delete;
    private necesario.MaterialButton btn_save;
    private necesario.MaterialButton btn_search;
    private necesario.MaterialButton btn_update;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane list_doctorDetails;
    private javax.swing.JTable table_agentList;
    private rojerusan.RSPasswordTextPlaceHolder txt_addConfirmPass;
    private app.bolivia.swing.JCTextField txt_addContactNo;
    private app.bolivia.swing.JCTextField txt_addFname;
    private app.bolivia.swing.JCTextField txt_addLname;
    private rojerusan.RSPasswordTextPlaceHolder txt_addPass;
    private app.bolivia.swing.JCTextField txt_addUsername;
    private app.bolivia.swing.JCTextField txt_searchAgent;
    private app.bolivia.swing.JCTextField txt_updateContactNo;
    private app.bolivia.swing.JCTextField txt_updateFname;
    private app.bolivia.swing.JCTextField txt_updateLname;
    private app.bolivia.swing.JCTextField txt_updateUsername;
    // End of variables declaration//GEN-END:variables

    
    public void refreshTable(){
        DefaultTableModel model = (DefaultTableModel) table_agentList.getModel();
        
        List<User> doctors = controller.getAgents();
        model.setRowCount(0);
    
        for (User doctor : doctors) {
            Vector<Object> row = new Vector<>();
            row.add(doctor.getUser_id());
            row.add(doctor.getFname());
            row.add(doctor.getLname());
            row.add(doctor.getUsername());
            row.add(doctor.getContact());
            model.addRow(row);
        }
    }

}
