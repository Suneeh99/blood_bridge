/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Model.Campaign;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import Controller.CampaignControler;
/**
 *
 * @author sunet
 */
public class AMCompaign extends javax.swing.JFrame {

    /**
     * Creates new form AMDoctor
     */
    private final CampaignControler controller;

    public AMCompaign() {
        controller = new CampaignControler();
        this.setResizable(false);
        initComponents();
        int completeCount = table(table_completed, "completed");
        int ongoingCount = table(table_ongoing, "ongoing");
        int unpaidCount = table(table_unpaid, "accepted");
        double income = (completeCount + ongoingCount) * 2000.00;
        
        lbl_completed.setText(Integer.toString(completeCount));
        lbl_ongoing.setText(Integer.toString(ongoingCount));
        lbl_unpaid.setText(Integer.toString(unpaidCount));
        lbl_income.setText(Double.toString(income));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btn_backDashboard = new necesario.RSMaterialButtonCircle();
        lbl_ongoing = new javax.swing.JLabel();
        lbl_completed = new javax.swing.JLabel();
        lbl_income = new javax.swing.JLabel();
        lbl_unpaid = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        table_ongoing = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        table_unpaid = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        table_completed = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_backDashboard.setBackground(new java.awt.Color(204, 0, 0));
        btn_backDashboard.setText("<");
        btn_backDashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_backDashboard.setFont(new java.awt.Font("Roboto Medium", 0, 40)); // NOI18N
        btn_backDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backDashboardActionPerformed(evt);
            }
        });
        jPanel2.add(btn_backDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 60, 60));

        lbl_ongoing.setBackground(new java.awt.Color(255, 0, 51));
        lbl_ongoing.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbl_ongoing.setForeground(new java.awt.Color(255, 0, 51));
        lbl_ongoing.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_ongoing.setText("0");
        jPanel2.add(lbl_ongoing, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 550, 50, 60));

        lbl_completed.setBackground(new java.awt.Color(255, 0, 51));
        lbl_completed.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbl_completed.setForeground(new java.awt.Color(255, 0, 51));
        lbl_completed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_completed.setText("0");
        jPanel2.add(lbl_completed, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 550, 50, 60));

        lbl_income.setBackground(new java.awt.Color(255, 0, 51));
        lbl_income.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbl_income.setForeground(new java.awt.Color(255, 0, 51));
        lbl_income.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_income.setText("0");
        jPanel2.add(lbl_income, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 560, 190, 60));

        lbl_unpaid.setBackground(new java.awt.Color(255, 0, 51));
        lbl_unpaid.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbl_unpaid.setForeground(new java.awt.Color(255, 0, 51));
        lbl_unpaid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_unpaid.setText("0");
        jPanel2.add(lbl_unpaid, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 550, 50, 60));

        table_ongoing.setBackground(new java.awt.Color(255, 255, 255));
        table_ongoing.setForeground(new java.awt.Color(0, 0, 0));
        table_ongoing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Id", "Name", "Date", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_ongoing.setName(""); // NOI18N
        table_ongoing.setRowHeight(25);
        table_ongoing.setSelectionBackground(new java.awt.Color(255, 0, 0));
        jScrollPane5.setViewportView(table_ongoing);

        jPanel2.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 210, 330, 290));

        table_unpaid.setBackground(new java.awt.Color(255, 255, 255));
        table_unpaid.setForeground(new java.awt.Color(0, 0, 0));
        table_unpaid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Id", "Name", "Date", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_unpaid.setName(""); // NOI18N
        table_unpaid.setRowHeight(25);
        table_unpaid.setSelectionBackground(new java.awt.Color(255, 0, 0));
        jScrollPane6.setViewportView(table_unpaid);

        jPanel2.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 210, 330, 290));

        table_completed.setBackground(new java.awt.Color(255, 255, 255));
        table_completed.setForeground(new java.awt.Color(0, 0, 0));
        table_completed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Id", "Name", "Date", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_completed.setName(""); // NOI18N
        table_completed.setRowHeight(25);
        table_completed.setSelectionBackground(new java.awt.Color(255, 0, 0));
        jScrollPane7.setViewportView(table_completed);

        jPanel2.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(896, 210, 330, 290));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/imgs/4.png"))); // NOI18N
        jPanel2.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 750));

        setSize(new java.awt.Dimension(1296, 758));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backDashboardActionPerformed
        ADashboard dashboard = new ADashboard();
        dashboard.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_backDashboardActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AMCompaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AMCompaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AMCompaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AMCompaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AMCompaign().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private necesario.RSMaterialButtonCircle btn_backDashboard;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lbl_completed;
    private javax.swing.JLabel lbl_income;
    private javax.swing.JLabel lbl_ongoing;
    private javax.swing.JLabel lbl_unpaid;
    private javax.swing.JTable table_completed;
    private javax.swing.JTable table_ongoing;
    private javax.swing.JTable table_unpaid;
    // End of variables declaration//GEN-END:variables

    public int table(javax.swing.JTable tableName, String status){
        DefaultTableModel model = (DefaultTableModel) tableName.getModel();
        
        List<Campaign> campaigns = controller.getCampaign(status);
        model.setRowCount(0);
    
        for (Campaign campaign : campaigns) {
            Vector<Object> row = new Vector<>();
            row.add(campaign.getCampaign_id());
            row.add(campaign.getCampaign_name());
            row.add(campaign.getDate());
            row.add(campaign.getTime());
            model.addRow(row);
        }
        
        return tableName.getRowCount();
    }

}
