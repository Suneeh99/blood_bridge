/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Model.Campaign;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import Controller.AgentController;
import Controller.CampaignControler;

;import javax.swing.JOptionPane;
/**
 *
 * @author sunet
 */
public class AgCampaign extends javax.swing.JFrame {

    /**
     * Creates new form AMDoctor
     */
    private final AgentController controller;
    private final CampaignControler controllerC;
    
    public AgCampaign() {
        controller = new AgentController();
        controllerC = new CampaignControler();
        this.setResizable(false);
        initComponents(); 
        table(table_ongoing, "ongoing");
        table(table_pending, "pending");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor. 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        table_ongoing = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        table_pending = new javax.swing.JTable();
        btn_complete = new necesario.MaterialButton();
        btn_reject = new necesario.MaterialButton();
        btn_backDashboard = new necesario.RSMaterialButtonCircle();
        btn_approve = new necesario.MaterialButton();
        lbl_date = new javax.swing.JLabel();
        lbl_campaignName = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        lbl_location = new javax.swing.JLabel();
        lbl_successCount = new javax.swing.JLabel();
        lbl_campaignName2 = new javax.swing.JLabel();
        lbl_campaignName3 = new javax.swing.JLabel();
        lbl_enrolleCount = new javax.swing.JLabel();
        lbl_rejectCount = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lbl_description = new javax.swing.JTextArea();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table_ongoing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_ongoing.setName(""); // NOI18N
        table_ongoing.setRowHeight(25);
        table_ongoing.setSelectionBackground(new java.awt.Color(255, 0, 0));
        table_ongoing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_ongoingMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(table_ongoing);

        jPanel2.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 380, 200));

        table_pending.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_pending.setName(""); // NOI18N
        table_pending.setRowHeight(25);
        table_pending.setSelectionBackground(new java.awt.Color(255, 0, 0));
        table_pending.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_pendingMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(table_pending);

        jPanel2.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 320, 180));

        btn_complete.setBackground(new java.awt.Color(0, 153, 0));
        btn_complete.setForeground(new java.awt.Color(255, 255, 255));
        btn_complete.setText("Completed");
        btn_complete.setFont(new java.awt.Font("Roboto Medium", 1, 14)); // NOI18N
        btn_complete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_completeActionPerformed(evt);
            }
        });
        jPanel2.add(btn_complete, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 560, 120, 40));

        btn_reject.setBackground(new java.awt.Color(255, 0, 51));
        btn_reject.setForeground(new java.awt.Color(255, 255, 255));
        btn_reject.setText("reject");
        btn_reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rejectActionPerformed(evt);
            }
        });
        jPanel2.add(btn_reject, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 310, 130, 40));

        btn_backDashboard.setBackground(new java.awt.Color(204, 0, 0));
        btn_backDashboard.setText("<");
        btn_backDashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_backDashboard.setFont(new java.awt.Font("Roboto Medium", 0, 40)); // NOI18N
        btn_backDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backDashboardActionPerformed(evt);
            }
        });
        jPanel2.add(btn_backDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 60, 60));

        btn_approve.setBackground(new java.awt.Color(0, 153, 0));
        btn_approve.setForeground(new java.awt.Color(255, 255, 255));
        btn_approve.setText("approve");
        btn_approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_approveActionPerformed(evt);
            }
        });
        jPanel2.add(btn_approve, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, 130, 40));

        lbl_date.setBackground(new java.awt.Color(0, 0, 0));
        lbl_date.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel2.add(lbl_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 230, 120, 40));

        lbl_campaignName.setBackground(new java.awt.Color(0, 0, 0));
        lbl_campaignName.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jPanel2.add(lbl_campaignName, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 190, 260, 40));

        lbl_time.setBackground(new java.awt.Color(0, 0, 0));
        lbl_time.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jPanel2.add(lbl_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 230, 90, 40));

        lbl_location.setBackground(new java.awt.Color(0, 0, 0));
        lbl_location.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jPanel2.add(lbl_location, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 270, 290, 50));

        lbl_successCount.setBackground(new java.awt.Color(0, 0, 0));
        lbl_successCount.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lbl_successCount.setForeground(new java.awt.Color(0, 204, 51));
        jPanel2.add(lbl_successCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 580, 70, 40));

        lbl_campaignName2.setBackground(new java.awt.Color(0, 0, 0));
        lbl_campaignName2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        lbl_campaignName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(lbl_campaignName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 190, 230, 40));

        lbl_campaignName3.setBackground(new java.awt.Color(0, 0, 0));
        lbl_campaignName3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lbl_campaignName3.setToolTipText("");
        jPanel2.add(lbl_campaignName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 510, 230, 40));

        lbl_enrolleCount.setBackground(new java.awt.Color(0, 0, 0));
        lbl_enrolleCount.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jPanel2.add(lbl_enrolleCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 550, 70, 30));

        lbl_rejectCount.setBackground(new java.awt.Color(0, 0, 0));
        lbl_rejectCount.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lbl_rejectCount.setForeground(new java.awt.Color(255, 51, 0));
        jPanel2.add(lbl_rejectCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 620, 70, 30));

        lbl_description.setColumns(20);
        lbl_description.setRows(5);
        lbl_description.setTabSize(3);
        lbl_description.setWrapStyleWord(true);
        lbl_description.setEnabled(false);
        lbl_description.setSelectionColor(new java.awt.Color(204, 51, 0));
        jScrollPane1.setViewportView(lbl_description);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 310, 300, 60));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/imgs/9.png"))); // NOI18N
        jPanel2.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 750));

        setSize(new java.awt.Dimension(1296, 758));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backDashboardActionPerformed
        AgDashboard agentDashboard = new AgDashboard();
        agentDashboard.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_backDashboardActionPerformed

    private void btn_completeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_completeActionPerformed
        int selectedRow = table_ongoing.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a campaign from the table.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;  
        }

        if (!lbl_campaignName3.getText().isEmpty()) {
            String campaign_id = table_ongoing.getValueAt(selectedRow, 0).toString();
            String status = "completed";

            int response = JOptionPane.showConfirmDialog(
                    null, 
                    "Are you sure you want to update the donor's eligibility?", 
                    "Confirm Update", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE
            );

            if (response == JOptionPane.YES_OPTION) {
                if (!controller.updateCampaignStatus(campaign_id, status)) {
                    JOptionPane.showMessageDialog(null, "Invalid Donor Id.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Eligibility Updated Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    table(table_ongoing, "pending");
//                    lbl_campaignName.setText("");
//                    lbl_date.setText("");
//                    lbl_time.setText("");
//                    lbl_description.setText("");
//                    lbl_location.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Eligibility update canceled.", "Canceled", JOptionPane.INFORMATION_MESSAGE);
            }
            table(table_ongoing, "ongoing");
        }    
    }//GEN-LAST:event_btn_completeActionPerformed

    private void btn_rejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rejectActionPerformed
        int selectedRow = table_pending.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a campaign from the table.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;  
        }

        if (!lbl_campaignName2.getText().isEmpty()) {
            String campaign_id = table_pending.getValueAt(selectedRow, 0).toString();
            String status = "rejected";

            int response = JOptionPane.showConfirmDialog(
                    null, 
                    "Are you sure you want to update the donor's eligibility?", 
                    "Confirm Update", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE
            );

            if (response == JOptionPane.YES_OPTION) {
                if (!controller.updateCampaignStatus(campaign_id, status)) {
                    JOptionPane.showMessageDialog(null, "Invalid Donor Id.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Eligibility Updated Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    table(table_pending, "pending");
                    lbl_campaignName.setText("");
                    lbl_date.setText("");
                    lbl_time.setText("");
                    lbl_description.setText("");
                    lbl_location.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Eligibility update canceled.", "Canceled", JOptionPane.INFORMATION_MESSAGE);
            }
        }    
    }//GEN-LAST:event_btn_rejectActionPerformed

    private void btn_approveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_approveActionPerformed
        String campaign_name = lbl_campaignName2.getText();
        int selectedRow = table_pending.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a campaign from the table.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;  
        }

        if (!lbl_campaignName2.getText().isEmpty()) {
            String campaign_id = table_pending.getValueAt(selectedRow, 0).toString();
            String status = "accepted";

            int response = JOptionPane.showConfirmDialog(
                    null, 
                    "Are you sure you want to approve this campaign?", 
                    "Confirm Update", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE
            );

            if (response == JOptionPane.YES_OPTION) {
                if (!controller.updateCampaignStatus(campaign_id, status)) {
                    JOptionPane.showMessageDialog(null, "Invalid campaign Id.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Campaign Approved Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    table(table_pending, "pending");

                }
            } else {
                JOptionPane.showMessageDialog(null, "Campaign Approved canceled.", "Canceled", JOptionPane.INFORMATION_MESSAGE);
            }
        }        
    }//GEN-LAST:event_btn_approveActionPerformed

    private void table_pendingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_pendingMouseClicked
         int selectedRow = table_pending.getSelectedRow();
         int campaign_id = Integer.parseInt(table_pending.getValueAt(selectedRow, 0).toString());
         Campaign campaign = controllerC.displayCampaign(campaign_id);
         lbl_campaignName2.setText(campaign.getCampaign_name());
         lbl_campaignName.setText(campaign.getCampaign_name());
         lbl_date.setText(campaign.getDate());
         lbl_time.setText(campaign.getTime());
         lbl_location.setText(campaign.getLocation());
         lbl_description.setText(campaign.getDescription());
    }//GEN-LAST:event_table_pendingMouseClicked

    private void table_ongoingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_ongoingMouseClicked
        int selectedRow = table_ongoing.getSelectedRow();
    
        if (selectedRow != -1) { 
            int campaign_id = Integer.parseInt(table_ongoing.getValueAt(selectedRow, 0).toString());

            Campaign campaign = controllerC.displayCampaign(campaign_id);
            lbl_campaignName3.setText(campaign.getCampaign_name());

            int enrolledDonorCount = controller.getEnrolledDonor(campaign_id);
            lbl_enrolleCount.setText(String.valueOf(enrolledDonorCount)); 
            
            int successCount = controller.getSuccessDonor(campaign_id);
            lbl_successCount.setText(String.valueOf(successCount)); 
            
            int rejectedDonorCount = enrolledDonorCount - successCount;
            lbl_rejectCount.setText(String.valueOf(rejectedDonorCount)); 
            
        }
    }//GEN-LAST:event_table_ongoingMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgCampaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgCampaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgCampaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgCampaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgCampaign().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private necesario.MaterialButton btn_approve;
    private necesario.RSMaterialButtonCircle btn_backDashboard;
    private necesario.MaterialButton btn_complete;
    private necesario.MaterialButton btn_reject;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lbl_campaignName;
    private javax.swing.JLabel lbl_campaignName2;
    private javax.swing.JLabel lbl_campaignName3;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JTextArea lbl_description;
    private javax.swing.JLabel lbl_enrolleCount;
    private javax.swing.JLabel lbl_location;
    private javax.swing.JLabel lbl_rejectCount;
    private javax.swing.JLabel lbl_successCount;
    private javax.swing.JLabel lbl_time;
    private javax.swing.JTable table_ongoing;
    private javax.swing.JTable table_pending;
    // End of variables declaration//GEN-END:variables

    
    
   public int table(javax.swing.JTable tableName, String status){
        DefaultTableModel model = (DefaultTableModel) tableName.getModel();
        
        List<Campaign> campaigns = controllerC.getCampaign(status);
        model.setRowCount(0);
    
        for (Campaign campaign : campaigns) {
            Vector<Object> row = new Vector<>();
            row.add(campaign.getCampaign_id());
            row.add(campaign.getCampaign_name());
            model.addRow(row);
        }
        return tableName.getRowCount();
    }
}
